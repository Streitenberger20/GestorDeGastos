@model GestorDeGastos.ViewModels.EditarRubroViewModel

<h1>Editar Rubro</h1>

<hr/>

<div class="row d-flex justify-content-center align-items-center">
    <div class="col-md-8">
        <form asp-action="EditarRubro" method="post">

            <input type="hidden" asp-for="Id" />

            <divclass ="form-group mb-3">
                <label class="control-label">Nombre Rubro</label>
                <input asp-for="NombreRubro" class="form-control" />
            </divclass>

            <h3>Detalles</h3>

            <table id="tablaDetalles" class="table table-striped">
                <thead>
                    <tr>
                        <th>Descripción</th>
                        <th>Acción</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Detalles.Count; i++)
                    {
                    <tr>
                        <td>
                            <input type="hidden" name="Detalles[@i].Id" value="@Model.Detalles[i].Id" class="form-control" />
                            <input type="text" name="Detalles[@i].Descripcion" value="@Model.Detalles[i].Descripcion" class="form-control" />
                        </td>
                        <td style="text-align:center;">
                            <button type="button" class="btn btn-danger">Eliminar</button>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>

            <div class="form-group mb-3">
                <div class="row align-items-center">
                    <div class="col-md-8">
                        <input type="text" id="nuevoDetalleDescripcion" placeholder="Nueva descripción" class="form-control" />
                    </div>
                    <div class="col-md-4">
                        <button type="button" id="btnAgregarDetalle" class="btn btn-info">Agregar Detalle</button>
                    </div>
                </div>
            </div>

            <h3>Roles asignados</h3>
            <div>
                @foreach (var rol in Model.RolesDisponibles)
                {
                var checkedAttr = Model.RolesSeleccionados.Contains(rol.Id) ? "checked" : "";
                <label style="display:block; margin-bottom: 5px;">
                    <input type="checkbox" name="RolesSeleccionados" value="@rol.Id" @checkedAttr />
                    @rol.NombreRol
                </label>
                }
            </div>

            <div class="form-group d-flex justify-content-center align-items-center">
                <input type="submit" value="Editar" class="btn btn-primary mb-3" />
            </div>
        </form>
</div>
</div>

<script>
    // Función para eliminar una fila de detalle
    document.querySelectorAll('.btnEliminarDetalle').forEach(btn => {
        btn.addEventListener('click', function () {
            const fila = this.closest('tr');
            fila.remove();
            actualizarIndices();
        });
    });

    // Función para actualizar los índices de los inputs después de eliminar o agregar filas
    function actualizarIndices() {
        const filas = document.querySelectorAll('#tablaDetalles tbody tr');
        filas.forEach((fila, index) => {
            const inputs = fila.querySelectorAll('input');
            inputs.forEach(input => {
                if (input.name.includes('Detalles')) {
                    if (input.name.includes('.Id')) {
                        input.name = `Detalles[${index}].Id`;
                    } else if (input.name.includes('.Descripcion')) {
                        input.name = `Detalles[${index}].Descripcion`;
                    }
                }
            });
        });
    }

    // Agregar nuevo detalle a la tabla
    document.getElementById('btnAgregarDetalle').addEventListener('click', () => {
        const descInput = document.getElementById('nuevoDetalleDescripcion');
        const desc = descInput.value.trim();

        if (!desc) {
            alert('Ingrese una descripción válida');
            return;
        }

        const tbody = document.querySelector('#tablaDetalles tbody');
        const rowCount = tbody.querySelectorAll('tr').length;

        const nuevaFila = document.createElement('tr');

        nuevaFila.innerHTML = `
            <td>
                <input type="hidden" name="Detalles[${rowCount}].Id" value="0" />
                <input type="text" name="Detalles[${rowCount}].Descripcion" value="${desc}" style="width: 100%;" />
            </td>
            <td style="text-align:center;">
                <button type="button" class="btnEliminarDetalle">Eliminar</button>
            </td>
        `;

        tbody.appendChild(nuevaFila);

        // Agregar event listener al nuevo botón eliminar
        nuevaFila.querySelector('.btnEliminarDetalle').addEventListener('click', function () {
            this.closest('tr').remove();
            actualizarIndices();
        });

        descInput.value = '';
    });
</script>