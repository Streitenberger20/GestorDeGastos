@model GestorDeGastos.ViewModels.DashboardViewModel
@using System.Globalization
@{
    ViewData["Title"] = "Dashboard";
}

<div class="container mt-4">
    <h2 class="mb-4">Gastos del Mes</h2>

    <!-- Totales del mes actual -->
    <div class="row my-4">
        <div class="col-md-6 mb-3">
            <div class="card text-white bg-success h-100">
                <div class="card-body">
                    <h5 class="card-title">Total del mes en AR$</h5>
                    <p class="h4">@Model.TotalMesPesos.ToString("C", CultureInfo.CreateSpecificCulture("es-AR"))</p>
                </div>
            </div>
        </div>
        <div class="col-md-6 mb-3">
            <div class="card text-white bg-info h-100">
                <div class="card-body">
                    <h5 class="card-title">Total del mes en USD</h5>
                    <p class="h4">US$ @Model.TotalMesDolares.ToString("N2")</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Sección de Gráficos de Rubros -->
    <div class="row mb-4">
        <!-- Gráfico de rubros pesos -->
        <div class="col-md-6 mb-3">
            <div class="card h-100">
                <div class="card-body">
                    <h5 class="card-title">Distribución por Rubros (Pesos)</h5>
                    @if (Model.CategoriasDelMes.Any(c => c.TotalPesos != 0))
                    {
                        <div style="height: 300px;">
                            <canvas id="graficoRubrosPesos"></canvas>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info text-center mt-3">
                            No hay gastos en pesos registrados en este mes.
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Gráfico de rubros USD -->
        <div class="col-md-6 mb-3">
            <div class="card h-100">
                <div class="card-body">
                    <h5 class="card-title">Distribución por Rubros (Dólares)</h5>
                    @if (Model.CategoriasDelMes.Any(c => c.TotalDolares != 0))
                    {
                        <div style="height: 300px;">
                            <canvas id="graficoRubrosDolares"></canvas>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info text-center mt-3">
                            No hay gastos en dólares registrados este mes.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Tabla de gastos en pesos -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Gastos en Pesos (Mes Actual)</h5>
                    @if (Model.GastosPesos.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered table-sm">
                                <thead>
                                    <tr>
                                        <th>Fecha</th>
                                        <th>Usuario</th>
                                        <th>Rubro</th>
                                        <th>Detalle</th>
                                        <th>Monto</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var g in Model.GastosPesos)
                                    {
                                        <tr>
                                            <td>@g.Fecha.ToShortDateString()</td>
                                            <td>@g.Usuario</td>
                                            <td>@g.Rubro</td>
                                            <td>@g.Detalle</td>
                                            <td>@g.Monto.ToString("C", CultureInfo.CreateSpecificCulture("es-AR"))</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info text-center">
                            No hay gastos en pesos registrados este mes.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Tabla de gastos en dólares -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Gastos en Dólares (Mes Actual)</h5>
                    @if (Model.GastosDolares.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered table-sm">
                                <thead>
                                    <tr>
                                        <th>Fecha</th>
                                        <th>Usuario</th>
                                        <th>Rubro</th>
                                        <th>Detalle</th>
                                        <th>Monto</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var g in Model.GastosDolares)
                                    {
                                        <tr>
                                            <td>@g.Fecha.ToShortDateString()</td>
                                            <td>@g.Usuario</td>
                                            <td>@g.Rubro</td>
                                            <td>@g.Detalle</td>
                                            <td>US$ @g.Monto.ToString("N2")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info text-center">
                            No hay gastos en dólares registrados este mes.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>


    <!-- Sección de Comparativa 6 meses -->
    <div class="row mb-4">
        <!-- Comparativa 6 meses pesos -->
        <div class="col-md-6 mb-3">
            <div class="card h-100">
                <div class="card-body">
                    <h5 class="card-title">Comparativa AR$ - Últimos 6 meses</h5>
                    @if (Model.Comparativa6Meses.Any(m => m.TotalPesos != 0))
                    {
                        <div style="height: 300px;">
                            <canvas id="graficoComparativaPesos"></canvas>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info text-center mt-3">
                            No hay datos para la comparativa.
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Comparativa 6 meses dolares -->
        <div class="col-md-6 mb-3">
            <div class="card h-100">
                <div class="card-body">
                    <h5 class="card-title">Comparativa USD - Últimos 6 meses</h5>
                    @if (Model.Comparativa6Meses.Any(m => m.TotalDolares != 0))
                    {
                        <div style="height: 300px;">
                            <canvas id="graficoComparativaDolares"></canvas>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info text-center mt-3">
                            No hay datos para la comparativa.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Configuración común para gráficos
        const chartOptions = {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'bottom'
                }
            }
        };

        // Gráfico de Rubros Pesos
        @if (Model.CategoriasDelMes.Any(c => c.TotalPesos != 0))
        {
                <text>
                new Chart(document.getElementById('graficoRubrosPesos').getContext('2d'), {
                    type: 'pie',
                    data: {
                        labels: @Html.Raw(Json.Serialize(Model.CategoriasDelMes.Where(c => c.TotalPesos != 0).Select(c => c.Nombre))),
                        datasets: [{
                            data: @Html.Raw(Json.Serialize(Model.CategoriasDelMes.Where(c => c.TotalPesos != 0).Select(c => c.TotalPesos))),
                            backgroundColor: ['#007bff', '#28a745', '#ffc107', '#17a2b8', '#dc3545', '#6c757d']
                        }]
                    },
                    options: chartOptions
                });
                </text>
        }

        // Gráfico de Rubros Dólares
        @if (Model.CategoriasDelMes.Any(c => c.TotalDolares != 0))
        {
                <text>
                new Chart(document.getElementById('graficoRubrosDolares').getContext('2d'), {
                    type: 'pie',
                    data: {
                        labels: @Html.Raw(Json.Serialize(Model.CategoriasDelMes.Where(c => c.TotalDolares != 0).Select(c => c.Nombre))),
                        datasets: [{
                            data: @Html.Raw(Json.Serialize(Model.CategoriasDelMes.Where(c => c.TotalDolares != 0).Select(c => c.TotalDolares))),
                            backgroundColor: ['#007bff', '#28a745', '#ffc107', '#17a2b8', '#dc3545', '#6c757d']
                        }]
                    },
                    options: chartOptions
                });
                </text>
        }

        // Comparativa 6 meses Pesos
        @if (Model.Comparativa6Meses.Any(m => m.TotalPesos != 0))
        {
                <text>
                new Chart(document.getElementById('graficoComparativaPesos').getContext('2d'), {
                    type: 'bar',
                    data: {
                        labels: @Html.Raw(Json.Serialize(Model.Comparativa6Meses.Select(m => m.Mes))),
                        datasets: [{
                            label: 'Gastos en Pesos',
                            data: @Html.Raw(Json.Serialize(Model.Comparativa6Meses.Select(m => m.TotalPesos))),
                            backgroundColor: '#28a745',
                            borderColor: '#28a745',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        ...chartOptions,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value) {
                                        return '$' + value.toLocaleString('es-AR');
                                    }
                                }
                            }
                        }
                    }
                });
                </text>
        }

        // Comparativa 6 meses Dólares
        @if (Model.Comparativa6Meses.Any(m => m.TotalDolares != 0))
        {
                <text>
                new Chart(document.getElementById('graficoComparativaDolares').getContext('2d'), {
                    type: 'bar',
                    data: {
                        labels: @Html.Raw(Json.Serialize(Model.Comparativa6Meses.Select(m => m.Mes))),
                        datasets: [{
                            label: 'Gastos en Dólares',
                            data: @Html.Raw(Json.Serialize(Model.Comparativa6Meses.Select(m => m.TotalDolares))),
                            backgroundColor: '#17a2b8',
                            borderColor: '#17a2b8',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        ...chartOptions,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value) {
                                        return 'US$' + value.toLocaleString('en-US');
                                    }
                                }
                            }
                        }
                    }
                });
                </text>
        }
    </script>
}