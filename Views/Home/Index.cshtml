@model GestorDeGastos.ViewModels.DashboardViewModel
@using System.Globalization
@{
    ViewData["Title"] = "Dashboard";
}

<div class="container mt-4">
    <h2>📊 Dashboard de Gastos - Jefe</h2>

    <!-- Totales del mes actual -->
    <div class="row my-4">
        <div class="col-md-6">
            <div class="card text-white bg-success mb-3">
                <div class="card-body">
                    <h5>Total del mes en AR$</h5>
                    <p class="h4">@Model.TotalMesPesos.ToString("C", CultureInfo.CreateSpecificCulture("es-AR"))</p>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card text-white bg-info mb-3">
                <div class="card-body">
                    <h5>Total del mes en USD</h5>
                    <p class="h4">US$ @Model.TotalMesDolares.ToString("N2")</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Gráfico de rubros pesos -->
    <div class="row mb-5">
        <div class="col-md-6">
            <div style="width: 400px; height: 400px;">
            <h5>📁 Distribución por Rubros (Pesos)</h5>
            <canvas id="graficoRubrosPesos"></canvas>
            </div>
        </div>

        <!-- Gráfico de rubros USD -->

        <div class="col-md-6">
            <div style="width: 400px; height: 400px;">
            <h5>📁 Distribución por Rubros (Dolares)</h5>
            <canvas id="graficoRubrosDolares"></canvas>
            </div>
        </div>

    </div>
    <div class="row mb-5">

        <!-- Comparativa 6 meses pesos -->
        <div class="col-md-6">
            <h5>📈 Comparativa AR$ - Últimos 6 meses</h5>
            <canvas id="graficoComparativaPesos"></canvas>
        </div>

        <!-- Comparativa 6 meses dolares -->
        <div class="col-md-6">
            <h5>📈 Comparativa AR$ - Últimos 6 meses</h5>
            <canvas id="graficoComparativaDolares"></canvas>
        </div>
    </div>

    <!-- Tabla de gastos en pesos -->
    <div class="row mb-4">
        <div class="col-12">
            <h5>💰 Gastos en Pesos (Mes Actual)</h5>
            <table class="table table-bordered table-sm">
                <thead class="table-light">
                    <tr>
                        <th>Fecha</th>
                        <th>Usuario</th>
                        <th>Rubro</th>
                        <th>Detalle</th>
                        <th>Monto</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var g in Model.GastosPesos)
                    {
                        <tr>
                            <td>@g.Fecha.ToShortDateString()</td>
                            <td>@g.Usuario</td>
                            <td>@g.Rubro</td>
                            <td>@g.Detalle</td>
                            <td>@g.Monto.ToString("C", CultureInfo.CreateSpecificCulture("es-AR"))</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Tabla de gastos en dólares -->
    <div class="row mb-5">
        <div class="col-12">
            <h5>💵 Gastos en Dólares (Mes Actual)</h5>
            <table class="table table-bordered table-sm">
                <thead class="table-light">
                    <tr>
                        <th>Fecha</th>
                        <th>Usuario</th>
                        <th>Rubro</th>
                        <th>Detalle</th>
                        <th>Monto</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var g in Model.GastosDolares)
                    {
                        <tr>
                            <td>@g.Fecha.ToShortDateString()</td>
                            <td>@g.Usuario</td>
                            <td>@g.Rubro</td>
                            <td>@g.Detalle</td>
                            <td>US$ @g.Monto.ToString("N2")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Gráfico de Rubros Pesos

        const rubrosPesosLabels = @Html.Raw(Json.Serialize(
                    Model.CategoriasDelMes
                            .Where(c => c.TotalPesos != 0)
                            .Select(c => c.Nombre)
            ));

        const rubrosPesosData = @Html.Raw(Json.Serialize(
                Model.CategoriasDelMes
                        .Where(c => c.TotalPesos != 0)
                        .Select(c => c.TotalPesos)
        ));

        const ctxRubrosPesos = document.getElementById('graficoRubrosPesos').getContext('2d');
        const chartRubrosPesos = new Chart(ctxRubrosPesos, {
        type: 'pie',
        data: {
            labels: rubrosPesosLabels,
            datasets: [{
                label: 'Total por rubro (AR$)',
                data: rubrosPesosData,
                backgroundColor: ['#007bff', '#28a745', '#ffc107', '#17a2b8', '#dc3545', '#6c757d']
            }]
        },
        options: {
            plugins: {
                legend: {
                    position: 'bottom'
                }
            }
        }
    });

        // Gráfico de Rubros Dolares
        const rubrosDolaresLabels = @Html.Raw(Json.Serialize(
                Model.CategoriasDelMes
                        .Where(c => c.TotalDolares != 0)
                        .Select(c => c.Nombre)
        ));

        const rubrosDolaresData = @Html.Raw(Json.Serialize(
                Model.CategoriasDelMes
                        .Where(c => c.TotalDolares != 0)
                        .Select(c => c.TotalDolares)
        ));

        const ctxRubrosDolares = document.getElementById('graficoRubrosDolares').getContext('2d');
        const chartRubrosDolares = new Chart(ctxRubrosDolares, {
        type: 'pie',
        data: {
            labels: rubrosDolaresLabels,
            datasets: [{
                label: 'Total por rubro (USD)',
                data: rubrosDolaresData,
                backgroundColor: ['#007bff', '#28a745', '#ffc107', '#17a2b8', '#dc3545', '#6c757d']
            }]
        },
        options: {
            plugins: {
                legend: {
                    position: 'bottom'
                }
            }
        }
    });

        // Comparativa 6 meses
        const ctxComparativaPesos = document.getElementById('graficoComparativaPesos').getContext('2d');
        const chartComparativaPesos = new Chart(ctxComparativaPesos, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.Comparativa6Meses.Select(m => m.Mes))),
                datasets: [
                    {
                        label: 'Pesos (AR$)',
                        backgroundColor: '#28a745',
                        data: @Html.Raw(Json.Serialize(Model.Comparativa6Meses.Select(m => m.TotalPesos)))
                    }
                ]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });



                const ctxComparativaDolares = document.getElementById('graficoComparativaDolares').getContext('2d');
        const chartComparativaDolares = new Chart(ctxComparativaDolares, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.Comparativa6Meses.Select(m => m.Mes))),
                datasets: [
                            {
                        label: 'Dólares (USD)',
                        backgroundColor: '#17a2b8',
                        data: @Html.Raw(Json.Serialize(Model.Comparativa6Meses.Select(m => m.TotalDolares)))
                    }
                ]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

    </script>
}
